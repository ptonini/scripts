#!/bin/bash
set -e

UBUNTU_RELEASE=jammy
UBUNTU_VERSION=22.04
NODEJS_VERSION=18
ETCHER_VERSION=1.18.8
KIND_VERSION=0.18.0

build_key_name () {
    echo "/usr/share/keyrings/${1}-archive-keyring.gpg"
}

# PrÃ©-requisitos
sudo add-apt-repository -y ppa:git-core/ppa
sudo apt-get update
sudo apt-get install -y vim virtualbox remmina-* python3-pip make build-essential libssl-dev zlib1g-dev libbz2-dev \
        libreadline-dev libsqlite3-dev curl git libffi-dev apt-transport-https gnupg2 bash-completion gnupg-agent \
        software-properties-common ncdu jq python3-gi python3-gi-cairo gir1.2-gtk-3.0 openssh-server lsb-release \
        liblzma-dev flameshot golang-go golang-src csvkit calibre lua5.1 luarocks


## Kubectl
KEY=$(build_key_name google-cloud-packages)
curl -fsSL https://packages.cloud.google.com/apt/doc/apt-key.gpg | gpg --dearmor | sudo tee "$KEY" > /dev/null
sudo apt-add-repository "deb [signed-by=${KEY}] https://apt.kubernetes.io/ kubernetes-xenial main"
sudo apt-add-repository "deb [signed-by=${KEY}] https://packages.cloud.google.com/apt cloud-sdk main"

# Helm
KEY=$(build_key_name helm)
curl -fsSL https://baltocdn.com/helm/signing.asc | gpg --dearmor | sudo tee "${KEY}" > /dev/null
sudo apt-add-repository "deb [signed-by=${KEY}] https://baltocdn.com/helm/stable/debian/ all main"

# MongoDB
KEY=$(build_key_name mongodb)
curl -fsSL https://www.mongodb.org/static/pgp/server-6.0.asc | gpg --dearmor | sudo tee "${KEY}" > /dev/null
sudo apt-add-repository "deb [signed-by=${KEY} arch=amd64,arm64] https://repo.mongodb.org/apt/ubuntu ${UBUNTU_RELEASE}/mongodb-org/6.0 multiverse"

# Hashicorp
KEY=$(build_key_name hashicorp)
curl -fsSL https://apt.releases.hashicorp.com/gpg | gpg --dearmor | sudo tee "${KEY}" > /dev/null
sudo apt-add-repository "deb [arch=amd64 signed-by=${KEY}] https://apt.releases.hashicorp.com ${UBUNTU_RELEASE} main"

# Docker
KEY=$(build_key_name docker)
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor | sudo tee "${KEY}" > /dev/null
sudo add-apt-repository "deb [arch=amd64 signed-by=${KEY}] https://download.docker.com/linux/ubuntu ${UBUNTU_RELEASE} stable"

# Postgres
KEY=$(build_key_name postgres)
curl -fsSL https://www.postgresql.org/media/keys/ACCC4CF8.asc | gpg --dearmor | sudo tee "${KEY}" > /dev/null
sudo apt-add-repository "deb [arch=amd64 signed-by=${KEY}] http://apt.postgresql.org/pub/repos/apt ${UBUNTU_RELEASE}-pgdg main"

# PgAdmin
KEY=$(build_key_name pgadmin)
curl -fsSL https://www.pgadmin.org/static/packages_pgadmin_org.pub | gpg --dearmor | sudo tee "${KEY}" > /dev/null
sudo apt-add-repository "deb [signed-by=${KEY}] https://ftp.postgresql.org/pub/pgadmin/pgadmin4/apt/${UBUNTU_RELEASE} pgadmin4 main"

# Azure CLI
KEY=$(build_key_name azure)
curl -fsSL https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor | sudo tee "${KEY}" > /dev/null
sudo apt-add-repository "deb [arch=amd64 signed-by=${KEY}] https://packages.microsoft.com/repos/azure-cli/ ${UBUNTU_RELEASE} main"

# Spotify
KEY=$(build_key_name spotify)
curl -fsSL https://download.spotify.com/debian/pubkey_7A3A762FAFD4A51F.gpg | gpg --dearmor | sudo tee "${KEY}" > /dev/null
sudo apt-add-repository "deb [signed-by=${KEY}] http://repository.spotify.com stable non-free"

# Powershell
wget -q https://packages.microsoft.com/config/ubuntu/${UBUNTU_VERSION}/packages-microsoft-prod.deb
sudo dpkg -i packages-microsoft-prod.deb
rm packages-microsoft-prod.deb

# Etcher
wget -qO etcher.deb "https://github.com/balena-io/etcher/releases/download/v${ETCHER_VERSION}/balena-etcher_${ETCHER_VERSION}_amd64.deb"
sudo dpkg -i etcher.deb
rm etcher.deb

# NodeJS
curl -fsSL "https://deb.nodesource.com/setup_${NODEJS_VERSION}.x" | sudo bash -

sudo apt-get update
sudo add-apt-repository universe
sudo apt-get install -y spotify-client vault pgadmin4 postgresql-client-12 docker-ce nodejs mongodb-database-tools \
        docker-compose terraform azure-cli helm kubectl google-cloud-sdk powershell dotnet-sdk-6.0 mongodb-mongosh \
        google-chrome-stable

sudo npm install -g ncc yarn
sudo pip3 install pipenv -qq

# Pyenv
curl -fsSL https://pyenv.run | bash || true

# GIT
git config --global core.editor "vim"
git config --global push.autoSetupRemote true

# Kind
wget -qO kind "https://github.com/kubernetes-sigs/kind/releases/download/v${KIND_VERSION}/kind-linux-amd64"
chmod +x kind
sudo mv kind /usr/local/bin/kind

# AWS CLI
wget -q https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip
unzip -q awscli-exe-linux-x86_64.zip
sudo aws/install --update
rm -rf aws*

#ZeroTier
curl -fsSL https://install.zerotier.com | sudo bash


